#pragma version 7
txn NumAppArgs
int 0
==
bnz main_l10
txna ApplicationArgs 0
method "create_app(uint64,byte[],address)void"
==
bnz main_l9
txna ApplicationArgs 0
method "submit(uint64,byte[])void"
==
bnz main_l8
txna ApplicationArgs 0
method "get(uint64,byte[])byte[]"
==
bnz main_l7
txna ApplicationArgs 0
method "mustGet(uint64,byte[])byte[]"
==
bnz main_l6
err
main_l6:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 11
txna ApplicationArgs 2
store 12
load 11
load 12
callsub mustGet_11
store 13
byte 0x151f7c75
load 13
concat
log
int 1
return
main_l7:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 5
txna ApplicationArgs 2
store 6
load 5
load 6
callsub get_10
store 7
byte 0x151f7c75
load 7
concat
log
int 1
return
main_l8:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 3
txna ApplicationArgs 2
store 4
load 3
load 4
callsub submit_9
int 1
return
main_l9:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
==
&&
assert
txna ApplicationArgs 1
btoi
store 0
txna ApplicationArgs 2
store 1
txna ApplicationArgs 3
store 2
load 0
load 1
load 2
callsub createapp_8
int 1
return
main_l10:
txn OnCompletion
int UpdateApplication
==
bnz main_l14
txn OnCompletion
int DeleteApplication
==
bnz main_l13
err
main_l13:
txn ApplicationID
int 0
!=
assert
txn Sender
global CreatorAddress
==
return
main_l14:
txn ApplicationID
int 0
!=
assert
txn Sender
global CreatorAddress
==
return

// ceiling8
ceiling8_0:
store 29
load 29
int 7
+
int 8
/
retsub

// get_slot_from_round
getslotfromround_1:
store 28
load 28
callsub ceiling8_0
int 189
%
int 3
/
itob
retsub

// get_seed_cell_from_round
getseedcellfromround_2:
store 30
load 30
callsub ceiling8_0
int 189
%
int 3
%
retsub

// update_slot_with_new_seed
updateslotwithnewseed_3:
store 33
store 32
store 31
load 33
int 0
==
bnz updateslotwithnewseed_3_l6
load 33
int 1
==
bnz updateslotwithnewseed_3_l5
load 33
int 2
==
bnz updateslotwithnewseed_3_l4
err
updateslotwithnewseed_3_l4:
load 31
extract 0 64
load 32
concat
b updateslotwithnewseed_3_l7
updateslotwithnewseed_3_l5:
load 31
extract 0 32
load 32
concat
load 31
extract 64 32
concat
b updateslotwithnewseed_3_l7
updateslotwithnewseed_3_l6:
load 32
load 31
extract 32 64
concat
updateslotwithnewseed_3_l7:
retsub

// update_last_round
updatelastround_4:
store 40
byte ""
load 40
byte ""
app_global_get
extract 8 32
concat
app_global_put
retsub

// verify_vrf
verifyvrf_5:
store 22
store 21
store 20
load 20
itob
load 20
block BlkSeed
concat
sha512_256
load 21
load 22
vrf_verify VrfAlgorand
store 24
store 23
load 24
int 1
==
assert
load 23
retsub

// store_vrf
storevrf_6:
store 26
store 25
load 25
callsub getslotfromround_1
store 27
load 27
load 27
app_global_get
load 26
sha512_256
load 25
callsub getseedcellfromround_2
callsub updateslotwithnewseed_3
app_global_put
retsub

// init_global_state
initglobalstate_7:
store 36
store 35
store 34
load 34
store 37
initglobalstate_7_l1:
load 37
load 35
<
bz initglobalstate_7_l3
load 37
itob
load 36
app_global_put
load 37
int 1
+
store 37
b initglobalstate_7_l1
initglobalstate_7_l3:
retsub

// create_app
createapp_8:
store 19
store 18
store 17
load 17
int 8
%
int 0
==
assert
load 19
len
int 32
==
assert
int 0
int 63
byte "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
callsub initglobalstate_7
load 17
load 17
load 18
load 19
callsub verifyvrf_5
callsub storevrf_6
byte ""
load 17
itob
load 19
concat
app_global_put
retsub

// submit
submit_9:
store 39
store 38
byte ""
app_global_get
int 0
extract_uint64
int 8
+
load 38
==
load 38
byte ""
app_global_get
int 0
extract_uint64
-
int 1000
>
||
assert
load 38
load 38
load 39
byte ""
app_global_get
extract 8 32
callsub verifyvrf_5
callsub storevrf_6
load 38
itob
callsub updatelastround_4
retsub

// get
get_10:
store 9
store 8
byte ""
app_global_get
int 0
extract_uint64
load 8
<
load 8
int 189
int 8
*
+
byte ""
app_global_get
int 0
extract_uint64
<=
||
bnz get_10_l2
load 8
callsub getslotfromround_1
app_global_get
int 32
load 8
callsub getseedcellfromround_2
*
int 32
extract3
load 9
concat
sha512_256
store 10
b get_10_l3
get_10_l2:
byte ""
store 10
get_10_l3:
load 10
retsub

// mustGet
mustGet_11:
store 15
store 14
byte ""
app_global_get
int 0
extract_uint64
load 14
>=
assert
load 14
int 189
int 8
*
+
byte ""
app_global_get
int 0
extract_uint64
>
assert
load 14
callsub getslotfromround_1
app_global_get
int 32
load 14
callsub getseedcellfromround_2
*
int 32
extract3
load 15
concat
sha512_256
store 16
load 16
retsub